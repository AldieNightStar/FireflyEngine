package haxidenti.firefly.project

import haxidenti.firefly.engine.Engine
import haxidenti.firefly.util.ZipUtil
import haxidenti.firefly.util.writeIfDiffers
import java.io.File

object ProjectFiles {
    val projectFolder = File(".")

    // Files in project
    val includeFile = projectFolder.resolve("____.lua")
    val mainFile = projectFolder.resolve("main.lua")
    val outputDist = projectFolder.resolve("output.love")

    // Folders in project
    val generateFilesFolder = projectFolder.resolve("gen")

    fun createFolderStructure() {
        if (!generateFilesFolder.isDirectory) generateFilesFolder.mkdirs()
    }

    fun packEngineFiles() {
        generateIncludeFile(true)
        ZipUtil.pack(listOf(Engine.engineLoveFolder, projectFolder), outputDist, listOf(outputDist.name))
    }

    fun generateIncludeFile(isRelease: Boolean) {
        val engineFilesPath = Engine.engineLoveFolder.canonicalPath
            .replace("\\", "/") + "/?.lua"

        includeFile.writeIfDiffers(buildString {
            val isDev = !isRelease

            // If is dev mode, then add including engine folder
            if (isDev) {
                append(
                    """
                    -- Please DO NOT EDIT this file. It will be generated every time engine is started
                    -- When game will be released, then engine files will be included
                    package.path = "$engineFilesPath" .. ";" .. package.path
                    
                    -- Include all the functionality
                    """.trimIndent()
                )
            }

            // Add include "firefly_engine" no matter what
            append("""
                require("firefly_engine")
                """.trimIndent()
            )

            // If dev, then add last message comment to the file
            if (isDev) {
                append("""
                     -- Please, add "init_firefly" at the very end of "main.lua"
                     -- It will initialize everything
                """.trimIndent())
            }
        })
    }

    fun generateMainFile() {
        mainFile.writeText("""
            -- Load engine
            require "${includeFile.nameWithoutExtension}"
            
            -- Main code
            function love.load()     end
            function love.draw()     end
            function love.update(dt) end
            
            -- Init Firefly
            init_firefly()
        """.trimIndent())
    }


}